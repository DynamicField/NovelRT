package com.github.novelrt.input

import com.github.novelrt.interop.NovelRT.NrtKeyCodeKind.*

enum class KeyCode(internal val nativeValue: Int) {
    NOTHING(NRT_KEYCODE_NOTHING),
    ENTER(NRT_KEYCODE_ENTER),
    ESCAPE_KEY(NRT_KEYCODE_ESCAPE_KEY),
    BACKSPACE(NRT_KEYCODE_BACKSPACE),
    TAB(NRT_KEYCODE_TAB),
    SPACEBAR(NRT_KEYCODE_SPACEBAR),
    SINGLE_QUOTE(NRT_KEYCODE_SINGLE_QUOTE),
    LEFT_BRACKET(NRT_KEYCODE_LEFT_BRACKET),
    RIGHT_BRACKET(NRT_KEYCODE_RIGHT_BRACKET),
    COMMA(NRT_KEYCODE_COMMA),
    MINUS(NRT_KEYCODE_MINUS),
    FULL_STOP(NRT_KEYCODE_FULL_STOP),
    FORWARD_SLASH(NRT_KEYCODE_FORWARD_SLASH),
    ZERO(NRT_KEYCODE_ZERO),
    ONE(NRT_KEYCODE_ONE),
    TWO(NRT_KEYCODE_TWO),
    THREE(NRT_KEYCODE_THREE),
    FOUR(NRT_KEYCODE_FOUR),
    FIVE(NRT_KEYCODE_FIVE),
    SIX(NRT_KEYCODE_SIX),
    SEVEN(NRT_KEYCODE_SEVEN),
    Eight(NRT_KEYCODE_Eight),
    Nine(NRT_KEYCODE_Nine),
    SEMICOLON(NRT_KEYCODE_SEMICOLON),
    LEFT_SQUARE_BRACKET(NRT_KEYCODE_LEFT_SQUARE_BRACKET),
    BACK_SLASH(NRT_KEYCODE_BACK_SLASH),
    RIGHT_SQUARE_BRACKET(NRT_KEYCODE_RIGHT_SQUARE_BRACKET),
    CARET(NRT_KEYCODE_CARET),
    A(NRT_KEYCODE_A),
    B(NRT_KEYCODE_B),
    C(NRT_KEYCODE_C),
    D(NRT_KEYCODE_D),
    E(NRT_KEYCODE_E),
    F(NRT_KEYCODE_F),
    G(NRT_KEYCODE_G),
    H(NRT_KEYCODE_H),
    I(NRT_KEYCODE_I),
    J(NRT_KEYCODE_J),
    K(NRT_KEYCODE_K),
    L(NRT_KEYCODE_L),
    M(NRT_KEYCODE_M),
    N(NRT_KEYCODE_N),
    O(NRT_KEYCODE_O),
    P(NRT_KEYCODE_P),
    Q(NRT_KEYCODE_Q),
    R(NRT_KEYCODE_R),
    S(NRT_KEYCODE_S),
    T(NRT_KEYCODE_T),
    U(NRT_KEYCODE_U),
    V(NRT_KEYCODE_V),
    W(NRT_KEYCODE_W),
    X(NRT_KEYCODE_X),
    Y(NRT_KEYCODE_Y),
    Z(NRT_KEYCODE_Z),
    CAPS_LOCK(NRT_KEYCODE_CAPS_LOCK),
    F1(NRT_KEYCODE_F1),
    F2(NRT_KEYCODE_F2),
    F3(NRT_KEYCODE_F3),
    F4(NRT_KEYCODE_F4),
    F5(NRT_KEYCODE_F5),
    F6(NRT_KEYCODE_F6),
    F7(NRT_KEYCODE_F7),
    F8(NRT_KEYCODE_F8),
    F9(NRT_KEYCODE_F9),
    F10(NRT_KEYCODE_F10),
    F11(NRT_KEYCODE_F11),
    F12(NRT_KEYCODE_F12),
    F13(NRT_KEYCODE_F13),
    F14(NRT_KEYCODE_F14),
    F15(NRT_KEYCODE_F15),
    F16(NRT_KEYCODE_F16),
    F17(NRT_KEYCODE_F17),
    F18(NRT_KEYCODE_F18),
    F19(NRT_KEYCODE_F19),
    F20(NRT_KEYCODE_F20),
    F21(NRT_KEYCODE_F21),
    F22(NRT_KEYCODE_F22),
    F23(NRT_KEYCODE_F23),
    F24(NRT_KEYCODE_F24),
    PRINT_SCREEN(NRT_KEYCODE_PRINT_SCREEN),
    SCROLL_LOCK(NRT_KEYCODE_SCROLL_LOCK),
    PAUSE_BREAK(NRT_KEYCODE_PAUSE_BREAK),
    INSERT(NRT_KEYCODE_INSERT),
    HOME(NRT_KEYCODE_HOME),
    PAGE_UP(NRT_KEYCODE_PAGE_UP),
    DELETE(NRT_KEYCODE_DELETE),
    END(NRT_KEYCODE_END),
    PAGE_DOWN(NRT_KEYCODE_PAGE_DOWN),
    RIGHT_ARROW(NRT_KEYCODE_RIGHT_ARROW),
    LEFT_ARROW(NRT_KEYCODE_LEFT_ARROW),
    DOWN_ARROW(NRT_KEYCODE_DOWN_ARROW),
    UP_ARROW(NRT_KEYCODE_UP_ARROW),
    NUM_LOCK(NRT_KEYCODE_NUM_LOCK),
    NUM_PAD_DIVIDE(NRT_KEYCODE_NUM_PAD_DIVIDE),
    NUM_PAD_MULTIPLY(NRT_KEYCODE_NUM_PAD_MULTIPLY),
    NUM_PAD_MINUS(NRT_KEYCODE_NUM_PAD_MINUS),
    NUM_PAD_PLUS(NRT_KEYCODE_NUM_PAD_PLUS),
    NUM_PAD_ENTER(NRT_KEYCODE_NUM_PAD_ENTER),
    NUM_PAD_ONE(NRT_KEYCODE_NUM_PAD_ONE),
    NUM_PAD_TWO(NRT_KEYCODE_NUM_PAD_TWO),
    NUM_PAD_THREE(NRT_KEYCODE_NUM_PAD_THREE),
    NUM_PAD_FOUR(NRT_KEYCODE_NUM_PAD_FOUR),
    NUM_PAD_FIVE(NRT_KEYCODE_NUM_PAD_FIVE),
    NUM_PAD_SIX(NRT_KEYCODE_NUM_PAD_SIX),
    NUM_PAD_SEVEN(NRT_KEYCODE_NUM_PAD_SEVEN),
    NUM_PAD_EIGHT(NRT_KEYCODE_NUM_PAD_EIGHT),
    NUM_PAD_NINE(NRT_KEYCODE_NUM_PAD_NINE),
    NUM_PAD_ZERO(NRT_KEYCODE_NUM_PAD_ZERO),
    NUM_PAD_FULL_STOP(NRT_KEYCODE_NUM_PAD_FULL_STOP),
    NUM_PAD_EQUALS(NRT_KEYCODE_NUM_PAD_EQUALS),
    MENU_KEY(NRT_KEYCODE_MENU_KEY),
    LEFT_MOUSE_BUTTON(NRT_KEYCODE_LEFT_MOUSE_BUTTON),
    RIGHT_MOUSE_BUTTON(NRT_KEYCODE_RIGHT_MOUSE_BUTTON),
    MIDDLE_MOUSE_BUTTON(NRT_KEYCODE_MIDDLE_MOUSE_BUTTON),
    MOUSE_BUTTON_FOUR(NRT_KEYCODE_MOUSE_BUTTON_FOUR),
    MOUSE_BUTTON_FIVE(NRT_KEYCODE_MOUSE_BUTTON_FIVE),
    MOUSE_BUTTON_SIX(NRT_KEYCODE_MOUSE_BUTTON_SIX),
    MOUSE_BUTTON_SEVEN(NRT_KEYCODE_MOUSE_BUTTON_SEVEN),
    MOUSE_BUTTON_EIGHT(NRT_KEYCODE_MOUSE_BUTTON_EIGHT),
    FIRST_MOUSE_BUTTON(NRT_KEYCODE_FIRST_MOUSE_BUTTON),
    LAST_MOUSE_BUTTON(NRT_KEYCODE_LAST_MOUSE_BUTTON);

    companion object {
        private val lookup: Map<NrtKeyCode, KeyCode> = enumValues<KeyCode>().associateBy { it.nativeValue }
        internal fun NrtKeyCode.toKotlinKeyCode(): KeyCode =
            lookup[this] ?: throw IllegalArgumentException("Key code not found: $this.")
    }
}
